name: CI

on:
  workflow_call: # From .github/workflows/release.yml
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # The purpose of running every night is to detect when a change to
  # https://github.com/rust-lang/rust/tree/master/src/rustdoc-json-types
  # requires that we release a new version of public-api to be compatible with
  # the latest nightly toolchain
  schedule:
    - cron: '33 3 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  temp-test-release:
    # needs: verify
    # environment: crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Try to cargo publish. If this succeeds we will tag the release.
      - run: cargo publish --dry-run
        env:
          CARGO_REGISTRY_TOKEN: REDACTED

      # Figure out what tag to use.
      - id: tag
        run: echo "::set-output name=NAME::v$(cargo read-manifest | jq .version)"

      # Push tag to git.
      - name: git tag
        run: |
          echo git tag ${{ steps.tag.outputs.NAME }}
          echo git push origin ${{ steps.tag.outputs.NAME }}

      # Create a GitHub Release from the tag.
      - uses: softprops/action-gh-release@1e07f43 # v0.1.14
        with:
          tag_name: v0.9.0 # ${{ steps.tag.outputs.NAME }}

  cargo-fmt:
    name: cargo fmt -- --check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: cargo fmt -- --check

  cargo-doc:
    name: RUSTDOCFLAGS='-D warnings' cargo doc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: RUSTDOCFLAGS='-D warnings' cargo doc --locked --no-deps

  cargo-clippy:
    name: cargo clippy -- -D clippy::all -D clippy::pedantic
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: cargo clippy --locked --all-targets --all-features -- -D clippy::all -D clippy::pedantic

  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
    - run: cargo test --locked
